" Interface settings
" ===========================================================================
set secure

set t_Co=256      " Enable 256-color mode
set guioptions=i  " Use vim icon in gui
set visualbell    " Disable bell in gui
set t_vb=         " Disable bell in terminal
set t_ut=         " Fix corrupt background in tmux
set encoding=utf-8
set mouse=a
set cursorline    " Highligt line under cursor
set lazyredraw    " Avoid slow scrolling due to cursorline

" Popup menu configuration
highlight PmenuSel guibg=brown
highlight Pmenu guibg=Brown4

behave xterm

"Syntax settings
syntax on
filetype indent on
filetype plugin on

"Indent
set autoindent
set smartindent
set cindent

"Tabs
set ignorecase
set hidden
set tabstop=4
set ffs=unix,dos,mac
set expandtab
set shiftwidth=4

" History
set viminfo='100,f1
set dictionary-=/usr/share/dict/words dictionary+=/usr/share/dict/words
set complete-=k complete+=k

" Disable preview window
set completeopt-=preview

set hlsearch
set incsearch
set showcmd
set number
set nowrap
set wildmenu
set scrolloff=4
set sidescrolloff=4
set backspace=indent,eol,start
set foldmethod=indent
set foldnestmax=1
set foldlevelstart=99
set printencoding=cp852
set nopaste
set diffopt=vertical
set laststatus=2 "Show without split

" Swap and backup files
if has("win32")
    set backupdir=%TMP%
    set directory=%TMP%
else
    set backupdir=~/.vimbackup,/tmp
    set directory=~/.vimbackup,/tmp
endif

" Key bindings
" ===========================================================================

" Set mapleader to space
let mapleader = "\\"
map <space>        <leader>
map <space><space> <leader><leader>

" Other mappings
nmap <F6>          :bp<CR>
nmap <F7>          :bn<CR>
nmap <C-h>         :bp<CR>
nmap <C-l>          :bn<CR>
nmap <C-tab>       <ESC> :b#<cr>
nmap <F4>          :copen<CR>
nmap <leader><F4>  :cclose<CR>
nmap <F5>          :lopen<CR>
nmap <leader><F5>  :lclose<CR>
nmap <F12>         :nohlsearch<CR>
nmap <leader><F8>  :make clean
nmap <leader><tab> :b#<CR>
nmap <leader>n     :cnext<CR>
nmap <leader>p     :cprev<CR>
nmap <leader>§     :set rnu! rnu? <cr>

" Put cursor in a better position after a yank
vmap y ygv<Esc>

" Exit instert mode with kj
:imap kj <Esc>

" Better use for swedish keyboard
map ö [
map ä ]
map Ö {
map Ä }
map å =
map - /

" Block movements
map <leader>gB [{
map <leader>gb ]}
map <leader>gP [(
map <leader>gp ])
map <leader>gM [m
map <leader>gm ]m
map <leader>j }
map <leader>k {
map <leader>h (
map <leader>l )

" Tag movements
nmap <leader>gt g]

" Window movements
nmap <A-h>     <C-W>h
nmap <A-j>     <C-W>j
nmap <A-k>     <C-W>k
nmap <A-l>     <C-W>l

" Disable arrow keys (habit breaking)
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" Show vertical 80 char line for certain filetypes
au FileType c,cpp setlocal colorcolumn=80

" Reset colors before exiting (Needed when using screen)
au VimLeave * !echo -ne "\033[0m"

" Wrap lines in quickfix window
au FileType qf setlocal wrap linebreak

" Functions
func! MakeNormal()
	exec "set makeprg=make"
endfunc
func! MakeClean()
	exec "make clean"
endfunc
func! Compile()
    exec "w"
    exec "!gcc % -o %<"
endfunc
command! Compile call Compile()
func! SudoWrite()
    exec "w !sudo tee % > /dev/null"
endfunc
func! ToggleMenu()
    exec "if &go=~#'m'<Bar>set go-=m<Bar>else<Bar>set go+=m<Bar>endif"
endfunc

